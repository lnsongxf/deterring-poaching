setwd("~/Desktop/notebook/research/dissertation/first_paper/Data/")
list.files()
setwd("~/Desktop/notebook/research/dissertation/first_paper/analysis/data/")
list.files()
source("~/Desktop/notebook/research/dissertation/first_paper/analysis/communication/communication_functions.R")
alldata <- load_data()
chats <- alldata$sandbox
decisions <- data.table(read.dta("dp_data_R.dta"))
library(ggplot2)
library(gridExtra)
library(foreign)
library(reshape2)
library(corrplot)
library(dplyr)
decisions <- data.table(read.dta("dp_data_R.dta"))
decisions$chat <- with(decisions, ifelse(period %% 2 == 1, 1, 0))
chats[, count_g2 := find_group2(text), by = .(treatment,session,period)]
chats[, count_g2_percent := round((count_g2 / messagecount)*100,2)]
chats$treatment_factor <- plyr::mapvalues(chats$treatment_factor, c("1","2","3"),c("Zero", "Partial", "Full"))
chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="grey") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="blue") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
chats %>%
group_by(treatment_factor) %>%
select(messagecount, count_g2) %>%
summarise(total = (sum(unique(count_g2))/sum(unique(messagecount)))*100 ) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="blue") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
View(chats)
write.csv(chats, "chats_cleaned.csv")
chats_summary <- subset(chats, select = c("treatment","period","messagecount","count_g2"))
chats_summary <- unique(chats_summary)[, .(
messagecount_avg = mean(messagecount),
count_g2_avg = mean(count_g2)),
by = .(treatment,period)]
decisions_summary <- decisions[type=="Insider" & chat == 1, .(
in_h_avg = mean(in_h),
s_a_avg = mean(s_a)),
by=.(period, treatment)]
decisions_summary[, treatment := rep(1:3,8)]
setcolorder(decisions_summary, c("treatment","period","in_h_avg","s_a_avg"))
# create merged summary data
summary <- merge(chats_summary,decisions_summary)
# correlation matrix for each treatment, using only the numeric data columns
corr_list <- list()
for(i in 1:3) corr_list[[i]] <- cor(summary[treatment == i, 3:5, with=F])
# correlation plot
for(i in 1:3) corrplot(corr_list[[i]],type="upper")
ggplot(chats,aes(treatment_factor, messagecount, fill=treatment_factor)) +
stat_summary(fun.y="mean", geom="bar") +
ggtitle("mean message count")
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
geom_point() +
geom_line() +
ggtitle("message count over time")
View(summary)
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount"," count_g2"))
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount"," count_g2"))
chats[, count_g2 := find_group2(text), by = .(treatment,session,period)]
chats[, count_g2_percent := round((count_g2 / messagecount)*100,2)]
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount"," count_g2"))
View(chats)
rm(list = ls())
library(ggplot2)
library(gridExtra)
library(foreign)
library(reshape2)
library(corrplot)
library(dplyr)
setwd("~/Desktop/notebook/research/dissertation/first_paper/analysis/data/")
source("~/Desktop/notebook/research/dissertation/first_paper/analysis/communication/communication_functions.R")
alldata <- load_data()
chats <- alldata$sandbox
decisions <- data.table(read.dta("dp_data_R.dta"))
# add a chat dummy for odd periods: 1=chat, 0=no chat
decisions$chat <- with(decisions, ifelse(period %% 2 == 1, 1, 0))
chats[, count_g2 := find_group2(text), by = .(treatment,session,period)]
chats[, count_g2_percent := round((count_g2 / messagecount)*100,2)]
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount"," count_g2"))
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount", "count_g2"))
chats_summary <- unique(chats_summary)[, .(
messagecount_avg = mean(messagecount),
wordcount_avg = mean(wordcount),
count_g2_avg = mean(count_g2)),
by = .(treatment,period)]
View(chats_summary)
# summarize the decisions data set by treatment, and chat
decisions_summary <- decisions[type=="Insider" & chat == 1, .(
in_h_avg = mean(in_h),
s_a_avg = mean(s_a)),
by=.(period, treatment)]
decisions_summary[, treatment := rep(1:3,8)]
setcolorder(decisions_summary, c("treatment","period","in_h_avg","s_a_avg"))
# create merged summary data
summary <- merge(chats_summary,decisions_summary)
# correlation matrix for each treatment, using only the numeric data columns
corr_list <- list()
for(i in 1:3) corr_list[[i]] <- cor(summary[treatment == i, 3:5, with=F])
# correlation plot
for(i in 1:3) corrplot(corr_list[[i]],type="upper")
for(i in 1:3) corrplot(corr_list[[i]],type="upper", diag = F)
for(i in 1:3) corrplot(corr_list[[i]],type="upper", diag = F)
View(decisions)
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
geom_point() +
geom_line() +
ggtitle("message count over time")
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="point")
geom_line() +
ggtitle("message count over time")
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="point", geom="line") +
ggtitle("message count over time")
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom=c("point","line") )+
ggtitle("message count over time")
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
ggtitle("message count over time")
ggplot(chats, aes(period,count_g2,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
ggtitle("message count over time")
ggplot(chats, aes(count_g2,fill=treatment_factor)) +
geom_density(position="dodge",alpha=0.5) +
ggtitle("discussion of outsiders (density)")
ggplot(chats, aes(messagecount,fill=treatment_factor)) +
geom_density(position="dodge",alpha=0.5) +
ggtitle("raw word count (density)")
cowplot::plot_grid(g1,g2)
g1 <- chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="grey") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
g2 <- chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="blue") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
cowplot::plot_grid(g1,g2)
cowplot::plot_grid(g1,g2,labels = "AUTO", align = 'h', label_size = 12)
chats %>%
group_by(treatment) %>%
select(messagecount, count_g2) %>%
summarise(total = (sum(unique(count_g2))/sum(unique(messagecount)))*100 ) %>%
ggplot(., aes(treatment,total)) +
geom_bar(stat="identity",color="black", fill="blue") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
View(chats)
chats$treatment_factor <- plyr::mapvalues(chats$treatment_factor, c("1","2","3"),c("Zero", "Partial", "Full"))
g1 <- chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="grey") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
g2 <- chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total)) +
geom_bar(stat="identity",color="black", fill="blue") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
cowplot::plot_grid(g1,g2,labels = "AUTO", align = 'h', label_size = 12)
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
ggtitle("message count over time") + theme_classic()
ggplot(chats, aes(period,count_g2,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
ggtitle("Message count over time") + theme_classic()
g3 <- chats %>%
group_by(treatment_factor) %>%
select(messagecount, count_g2) %>%
summarise(total = (sum(unique(count_g2))/sum(unique(messagecount)))*100 ) %>%
ggplot(., aes(treatment,total)) +
geom_bar(stat="identity",color="black", fill=treatment_factor) +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total), fill=treatment_factor) +
geom_bar(stat="identity",color="black") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total), fill=treatment_factor) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
g3 <- chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity",color="black", fill="grey") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
g4 <- chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Messages about outsiders")
g1 <- ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") +
ggtitle("Total messages") + theme_classic()
g2 <- ggplot(chats, aes(period,count_g2,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
xlab("Period") + ylab("Mean") +
ggtitle("Messages about outsiders") + theme_classic()
cowplot::plot_grid(g1,g2, g3, g4, labels = "AUTO", align = 'h', ncol=2, label_size = 12)
cowplot::plot_grid(g3, g4, g1, g2, labels = "AUTO", align = 'h', ncol=2, label_size = 12)
chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity",color="black", fill="grey") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
g3 <- chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() +
ggtitle("Total messages")
g3 <- chats %>%
group_by(treatment_factor) %>%
select(messagecount) %>%
summarise(total = sum(unique(messagecount))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() + theme(legend.position="none") +
ggtitle("Total messages")
g4 <- chats %>%
group_by(treatment_factor) %>%
select(count_g2) %>%
summarise(total = sum(unique(count_g2))) %>%
ggplot(., aes(treatment_factor,total, fill=treatment_factor)) +
geom_bar(stat="identity") +
xlab(" ") + ylab(" ") +
theme_classic() + theme(legend.position="none") +
ggtitle("Messages about outsiders")
cowplot::plot_grid(g3, g4, g1, g2, labels = "AUTO", align = 'h', ncol=2, label_size = 12)
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + theme(legend.title=element_blank()) +
scale_x_continuous(limits=c(1, 15)) +
ggtitle("Total messages") + theme_classic()
seq(1,15,3)
seq(1,15,1)
seq(1,15,2)
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + theme(legend.title=element_blank()) +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
g1 <- ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + theme(legend.title=element_blank()) +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
g2 <- ggplot(chats, aes(period,count_g2,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
xlab("Period") + ylab("Mean") + theme(legend.title=element_blank()) +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Messages about outsiders") + theme_classic()
cowplot::plot_grid(g3, g4, g1, g2, labels = "AUTO", align = 'h', ncol=2, label_size = 12)
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + theme(legend.title=element_blank()) +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + theme(legend.title=element_blank()) +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + theme(legend.title="Treatment") +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + scale_color_discrete(name="Experimental\nCondition") +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + scale_color_discrete(name="") +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
g1 <- ggplot(chats, aes(period,messagecount,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" ) +
xlab("Period") + ylab("Mean") + scale_color_discrete(name="") +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Total messages") + theme_classic()
g2 <- ggplot(chats, aes(period,count_g2,group=treatment_factor,color=treatment_factor)) +
stat_summary(fun.y="mean", geom="line" )+
xlab("Period") + ylab("Mean") + ylab("Mean") + scale_color_discrete(name="") +
scale_x_continuous(breaks=seq(1,15,2)) +
ggtitle("Messages about outsiders") + theme_classic()
cowplot::plot_grid(g3, g4, g1, g2, labels = "AUTO", align = 'h', ncol=2, label_size = 12)
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount", "count_g2"))
chats_summary <- unique(chats_summary)[, .(
messagecount_avg = mean(messagecount),
wordcount_avg = mean(wordcount),
count_g2_avg = mean(count_g2)),
by = .(treatment,period)]
View(chats_summary)
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount", "count_g2"))
chats_summary$treatment_factor <- plyr::mapvalues(chats$treatment_factor, c("1","2","3"),c("Zero", "Partial", "Full"))
chats_summary$treatment_factor <- plyr::mapvalues(chats$treatment, c("1","2","3"),c("Zero", "Partial", "Full"))
View(chats_summary)
chats_summary <- unique(chats_summary)[, .(
messagecount_avg = mean(messagecount),
wordcount_avg = mean(wordcount),
count_g2_avg = mean(count_g2)),
by = .(treatment_factor,period)]
View(chats_summary)
ggplot(chats_summary, aes(period, messagecount_avg, group=treatment_factor, color=treatment_factor)) + geom_line() + theme_classic()
decisions_summary <- decisions[chat == 0, .(
in_h_avg = mean(in_h),
s_a_avg = mean(s_a)),
by=.(period, treatment)]
View(decisions_summary)
View(decisions)
decisions_summary <- decisions[type=="Outsider" & chat == 0, .(
h_avg = mean(h),
s_avg = mean(s)),
by=.(period, treatment)]
chats_summary$h <- decisions_summary$h
chats_summary <- subset(chats_summary, period > 1)
chats_summary$h <- decisions_summary$h
decisions_summary <- decisions[type=="Outsider" & chat == 0, .(
h_avg = mean(h),
s_avg = mean(s)),
by=.(period, treatment)]
chats_summary$h_avg <- decisions_summary$h_avg
chats_summary$s_avg <- decisions_summary$s_avg
chats_summary.long <- melt(chats_summary, id=c("treatment_factor", "period"))
View(chats_summary.long)
ggplot(chats_summary.long, aes(period, value, color=variable)) +
geom_line() +
facet_wrap(~treatment_factor)
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount", "count_g2"))
chats_summary$treatment_factor <- plyr::mapvalues(chats$treatment, c("1","2","3"),c("Zero", "Partial", "Full"))
chats_summary <- unique(chats_summary)[, .(
messagecount_avg = mean(messagecount),
wordcount_avg = mean(wordcount),
count_g2_avg = mean(count_g2)),
by = .(treatment_factor,period)]
chats_summary <- subset(chats, select = c("treatment","period","messagecount", "wordcount", "count_g2"))
chats_summary$treatment_factor <- plyr::mapvalues(chats$treatment, c("1","2","3"),c("Zero", "Partial", "Full"))
chats_summary <- unique(chats_summary)[, .(
count_g2_avg = mean(count_g2)),
by = .(treatment_factor,period)]
decisions_summary <- decisions[type=="Outsider" & chat == 0, .(
h_avg = mean(h),
s_avg = mean(s)),
by=.(period, treatment)]
chats_summary <- subset(chats_summary, period > 1)
chats_summary$h_avg <- decisions_summary$h_avg
chats_summary$s_avg <- decisions_summary$s_avg
chats_summary.long <- melt(chats_summary, id=c("treatment_factor", "period"))
ggplot(chats_summary.long, aes(period, value, color=variable)) +
geom_line() +
facet_wrap(~treatment_factor)
test <- read.csv("chatlogs_p1.csv")
View(test)
